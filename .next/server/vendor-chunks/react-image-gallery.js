"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-image-gallery";
exports.ids = ["vendor-chunks/react-image-gallery"];
exports.modules = {

/***/ "(rsc)/./node_modules/react-image-gallery/build/image-gallery.js":
/*!*****************************************************************!*\
  !*** ./node_modules/react-image-gallery/build/image-gallery.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n!function(e, t) {\n     true ? module.exports = t(__webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\")) : 0;\n}(void 0, (e)=>(()=>{\n        var t = {\n            703: (e, t, n)=>{\n                \"use strict\";\n                var i = n(414);\n                function r() {}\n                function a() {}\n                a.resetWarningCache = r, e.exports = function() {\n                    function e(e, t, n, r, a, o) {\n                        if (o !== i) {\n                            var s = new Error(\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");\n                            throw s.name = \"Invariant Violation\", s;\n                        }\n                    }\n                    function t() {\n                        return e;\n                    }\n                    e.isRequired = e;\n                    var n = {\n                        array: e,\n                        bool: e,\n                        func: e,\n                        number: e,\n                        object: e,\n                        string: e,\n                        symbol: e,\n                        any: e,\n                        arrayOf: t,\n                        element: e,\n                        elementType: e,\n                        instanceOf: t,\n                        node: e,\n                        objectOf: t,\n                        oneOf: t,\n                        oneOfType: t,\n                        shape: t,\n                        exact: t,\n                        checkPropTypes: a,\n                        resetWarningCache: r\n                    };\n                    return n.PropTypes = n, n;\n                };\n            },\n            697: (e, t, n)=>{\n                e.exports = n(703)();\n            },\n            414: (e)=>{\n                \"use strict\";\n                e.exports = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n            },\n            590: (e)=>{\n                var t = \"undefined\" != typeof Element, n = \"function\" == typeof Map, i = \"function\" == typeof Set, r = \"function\" == typeof ArrayBuffer && !!ArrayBuffer.isView;\n                function a(e, o) {\n                    if (e === o) return !0;\n                    if (e && o && \"object\" == typeof e && \"object\" == typeof o) {\n                        if (e.constructor !== o.constructor) return !1;\n                        var s, l, u, c;\n                        if (Array.isArray(e)) {\n                            if ((s = e.length) != o.length) return !1;\n                            for(l = s; 0 != l--;)if (!a(e[l], o[l])) return !1;\n                            return !0;\n                        }\n                        if (n && e instanceof Map && o instanceof Map) {\n                            if (e.size !== o.size) return !1;\n                            for(c = e.entries(); !(l = c.next()).done;)if (!o.has(l.value[0])) return !1;\n                            for(c = e.entries(); !(l = c.next()).done;)if (!a(l.value[1], o.get(l.value[0]))) return !1;\n                            return !0;\n                        }\n                        if (i && e instanceof Set && o instanceof Set) {\n                            if (e.size !== o.size) return !1;\n                            for(c = e.entries(); !(l = c.next()).done;)if (!o.has(l.value[0])) return !1;\n                            return !0;\n                        }\n                        if (r && ArrayBuffer.isView(e) && ArrayBuffer.isView(o)) {\n                            if ((s = e.length) != o.length) return !1;\n                            for(l = s; 0 != l--;)if (e[l] !== o[l]) return !1;\n                            return !0;\n                        }\n                        if (e.constructor === RegExp) return e.source === o.source && e.flags === o.flags;\n                        if (e.valueOf !== Object.prototype.valueOf) return e.valueOf() === o.valueOf();\n                        if (e.toString !== Object.prototype.toString) return e.toString() === o.toString();\n                        if ((s = (u = Object.keys(e)).length) !== Object.keys(o).length) return !1;\n                        for(l = s; 0 != l--;)if (!Object.prototype.hasOwnProperty.call(o, u[l])) return !1;\n                        if (t && e instanceof Element) return !1;\n                        for(l = s; 0 != l--;)if ((\"_owner\" !== u[l] && \"__v\" !== u[l] && \"__o\" !== u[l] || !e.$$typeof) && !a(e[u[l]], o[u[l]])) return !1;\n                        return !0;\n                    }\n                    return e != e && o != o;\n                }\n                e.exports = function(e, t) {\n                    try {\n                        return a(e, t);\n                    } catch (e) {\n                        if ((e.message || \"\").match(/stack|recursion/i)) return console.warn(\"react-fast-compare cannot handle circular refs\"), !1;\n                        throw e;\n                    }\n                };\n            },\n            359: (t)=>{\n                \"use strict\";\n                t.exports = e;\n            }\n        }, n = {};\n        function i(e) {\n            var r = n[e];\n            if (void 0 !== r) return r.exports;\n            var a = n[e] = {\n                exports: {}\n            };\n            return t[e](a, a.exports, i), a.exports;\n        }\n        i.n = (e)=>{\n            var t = e && e.__esModule ? ()=>e.default : ()=>e;\n            return i.d(t, {\n                a: t\n            }), t;\n        }, i.d = (e, t)=>{\n            for(var n in t)i.o(t, n) && !i.o(e, n) && Object.defineProperty(e, n, {\n                enumerable: !0,\n                get: t[n]\n            });\n        }, i.g = function() {\n            if (\"object\" == typeof globalThis) return globalThis;\n            try {\n                return this || new Function(\"return this\")();\n            } catch (e) {\n                if (false) {}\n            }\n        }(), i.o = (e, t)=>Object.prototype.hasOwnProperty.call(e, t), i.r = (e)=>{\n            \"undefined\" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {\n                value: \"Module\"\n            }), Object.defineProperty(e, \"__esModule\", {\n                value: !0\n            });\n        };\n        var r = {};\n        return (()=>{\n            \"use strict\";\n            function e(t) {\n                var n, i, r = \"\";\n                if (\"string\" == typeof t || \"number\" == typeof t) r += t;\n                else if (\"object\" == typeof t) if (Array.isArray(t)) for(n = 0; n < t.length; n++)t[n] && (i = e(t[n])) && (r && (r += \" \"), r += i);\n                else for(n in t)t[n] && (r && (r += \" \"), r += n);\n                return r;\n            }\n            function t() {\n                for(var t, n, i = 0, r = \"\"; i < arguments.length;)(t = arguments[i++]) && (n = e(t)) && (r && (r += \" \"), r += n);\n                return r;\n            }\n            i.r(r), i.d(r, {\n                default: ()=>nt\n            });\n            var n = i(359), a = i.n(n);\n            const o = function(e) {\n                var t = typeof e;\n                return null != e && (\"object\" == t || \"function\" == t);\n            }, s = \"object\" == typeof global && global && global.Object === Object && global;\n            var l = \"object\" == typeof self && self && self.Object === Object && self;\n            const u = s || l || Function(\"return this\")(), c = function() {\n                return u.Date.now();\n            };\n            var h = /\\s/;\n            var d = /^\\s+/;\n            const p = function(e) {\n                return e ? e.slice(0, function(e) {\n                    for(var t = e.length; t-- && h.test(e.charAt(t)););\n                    return t;\n                }(e) + 1).replace(d, \"\") : e;\n            }, f = u.Symbol;\n            var m = Object.prototype, b = m.hasOwnProperty, g = m.toString, v = f ? f.toStringTag : void 0;\n            var y = Object.prototype.toString;\n            var w = f ? f.toStringTag : void 0;\n            const S = function(e) {\n                return null == e ? void 0 === e ? \"[object Undefined]\" : \"[object Null]\" : w && w in Object(e) ? function(e) {\n                    var t = b.call(e, v), n = e[v];\n                    try {\n                        e[v] = void 0;\n                        var i = !0;\n                    } catch (e) {}\n                    var r = g.call(e);\n                    return i && (t ? e[v] = n : delete e[v]), r;\n                }(e) : function(e) {\n                    return y.call(e);\n                }(e);\n            };\n            var T = /^[-+]0x[0-9a-f]+$/i, O = /^0b[01]+$/i, E = /^0o[0-7]+$/i, k = parseInt;\n            const I = function(e) {\n                if (\"number\" == typeof e) return e;\n                if (function(e) {\n                    return \"symbol\" == typeof e || function(e) {\n                        return null != e && \"object\" == typeof e;\n                    }(e) && \"[object Symbol]\" == S(e);\n                }(e)) return NaN;\n                if (o(e)) {\n                    var t = \"function\" == typeof e.valueOf ? e.valueOf() : e;\n                    e = o(t) ? t + \"\" : t;\n                }\n                if (\"string\" != typeof e) return 0 === e ? e : +e;\n                e = p(e);\n                var n = O.test(e);\n                return n || E.test(e) ? k(e.slice(2), n ? 2 : 8) : T.test(e) ? NaN : +e;\n            };\n            var j = Math.max, x = Math.min;\n            const P = function(e, t, n) {\n                var i, r, a, s, l, u, h = 0, d = !1, p = !1, f = !0;\n                if (\"function\" != typeof e) throw new TypeError(\"Expected a function\");\n                function m(t) {\n                    var n = i, a = r;\n                    return i = r = void 0, h = t, s = e.apply(a, n);\n                }\n                function b(e) {\n                    return h = e, l = setTimeout(v, t), d ? m(e) : s;\n                }\n                function g(e) {\n                    var n = e - u;\n                    return void 0 === u || n >= t || n < 0 || p && e - h >= a;\n                }\n                function v() {\n                    var e = c();\n                    if (g(e)) return y(e);\n                    l = setTimeout(v, function(e) {\n                        var n = t - (e - u);\n                        return p ? x(n, a - (e - h)) : n;\n                    }(e));\n                }\n                function y(e) {\n                    return l = void 0, f && i ? m(e) : (i = r = void 0, s);\n                }\n                function w() {\n                    var e = c(), n = g(e);\n                    if (i = arguments, r = this, u = e, n) {\n                        if (void 0 === l) return b(u);\n                        if (p) return clearTimeout(l), l = setTimeout(v, t), m(u);\n                    }\n                    return void 0 === l && (l = setTimeout(v, t)), s;\n                }\n                return t = I(t) || 0, o(n) && (d = !!n.leading, a = (p = \"maxWait\" in n) ? j(I(n.maxWait) || 0, t) : a, f = \"trailing\" in n ? !!n.trailing : f), w.cancel = function() {\n                    void 0 !== l && clearTimeout(l), h = 0, i = u = r = l = void 0;\n                }, w.flush = function() {\n                    return void 0 === l ? s : y(c());\n                }, w;\n            }, _ = function(e, t, n) {\n                var i = !0, r = !0;\n                if (\"function\" != typeof e) throw new TypeError(\"Expected a function\");\n                return o(n) && (i = \"leading\" in n ? !!n.leading : i, r = \"trailing\" in n ? !!n.trailing : r), P(e, t, {\n                    leading: i,\n                    maxWait: t,\n                    trailing: r\n                });\n            };\n            var R = i(590), M = i.n(R), L = function() {\n                if (\"undefined\" != typeof Map) return Map;\n                function e(e, t) {\n                    var n = -1;\n                    return e.some(function(e, i) {\n                        return e[0] === t && (n = i, !0);\n                    }), n;\n                }\n                return function() {\n                    function t() {\n                        this.__entries__ = [];\n                    }\n                    return Object.defineProperty(t.prototype, \"size\", {\n                        get: function() {\n                            return this.__entries__.length;\n                        },\n                        enumerable: !0,\n                        configurable: !0\n                    }), t.prototype.get = function(t) {\n                        var n = e(this.__entries__, t), i = this.__entries__[n];\n                        return i && i[1];\n                    }, t.prototype.set = function(t, n) {\n                        var i = e(this.__entries__, t);\n                        ~i ? this.__entries__[i][1] = n : this.__entries__.push([\n                            t,\n                            n\n                        ]);\n                    }, t.prototype.delete = function(t) {\n                        var n = this.__entries__, i = e(n, t);\n                        ~i && n.splice(i, 1);\n                    }, t.prototype.has = function(t) {\n                        return !!~e(this.__entries__, t);\n                    }, t.prototype.clear = function() {\n                        this.__entries__.splice(0);\n                    }, t.prototype.forEach = function(e, t) {\n                        void 0 === t && (t = null);\n                        for(var n = 0, i = this.__entries__; n < i.length; n++){\n                            var r = i[n];\n                            e.call(t, r[1], r[0]);\n                        }\n                    }, t;\n                }();\n            }(), D =  false && 0, W = void 0 !== i.g && i.g.Math === Math ? i.g : \"undefined\" != typeof self && self.Math === Math ? self :  false ? 0 : Function(\"return this\")(), C = \"function\" == typeof requestAnimationFrame ? requestAnimationFrame.bind(W) : function(e) {\n                return setTimeout(function() {\n                    return e(Date.now());\n                }, 1e3 / 60);\n            }, F = [\n                \"top\",\n                \"right\",\n                \"bottom\",\n                \"left\",\n                \"width\",\n                \"height\",\n                \"size\",\n                \"weight\"\n            ], z = \"undefined\" != typeof MutationObserver, N = function() {\n                function e() {\n                    this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = function(e, t) {\n                        var n = !1, i = !1, r = 0;\n                        function a() {\n                            n && (n = !1, e()), i && s();\n                        }\n                        function o() {\n                            C(a);\n                        }\n                        function s() {\n                            var e = Date.now();\n                            if (n) {\n                                if (e - r < 2) return;\n                                i = !0;\n                            } else n = !0, i = !1, setTimeout(o, 20);\n                            r = e;\n                        }\n                        return s;\n                    }(this.refresh.bind(this));\n                }\n                return e.prototype.addObserver = function(e) {\n                    ~this.observers_.indexOf(e) || this.observers_.push(e), this.connected_ || this.connect_();\n                }, e.prototype.removeObserver = function(e) {\n                    var t = this.observers_, n = t.indexOf(e);\n                    ~n && t.splice(n, 1), !t.length && this.connected_ && this.disconnect_();\n                }, e.prototype.refresh = function() {\n                    this.updateObservers_() && this.refresh();\n                }, e.prototype.updateObservers_ = function() {\n                    var e = this.observers_.filter(function(e) {\n                        return e.gatherActive(), e.hasActive();\n                    });\n                    return e.forEach(function(e) {\n                        return e.broadcastActive();\n                    }), e.length > 0;\n                }, e.prototype.connect_ = function() {\n                    D && !this.connected_ && (document.addEventListener(\"transitionend\", this.onTransitionEnd_), window.addEventListener(\"resize\", this.refresh), z ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {\n                        attributes: !0,\n                        childList: !0,\n                        characterData: !0,\n                        subtree: !0\n                    })) : (document.addEventListener(\"DOMSubtreeModified\", this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0);\n                }, e.prototype.disconnect_ = function() {\n                    D && this.connected_ && (document.removeEventListener(\"transitionend\", this.onTransitionEnd_), window.removeEventListener(\"resize\", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener(\"DOMSubtreeModified\", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1);\n                }, e.prototype.onTransitionEnd_ = function(e) {\n                    var t = e.propertyName, n = void 0 === t ? \"\" : t;\n                    F.some(function(e) {\n                        return !!~n.indexOf(e);\n                    }) && this.refresh();\n                }, e.getInstance = function() {\n                    return this.instance_ || (this.instance_ = new e), this.instance_;\n                }, e.instance_ = null, e;\n            }(), B = function(e, t) {\n                for(var n = 0, i = Object.keys(t); n < i.length; n++){\n                    var r = i[n];\n                    Object.defineProperty(e, r, {\n                        value: t[r],\n                        enumerable: !1,\n                        writable: !1,\n                        configurable: !0\n                    });\n                }\n                return e;\n            }, A = function(e) {\n                return e && e.ownerDocument && e.ownerDocument.defaultView || W;\n            }, U = V(0, 0, 0, 0);\n            function G(e) {\n                return parseFloat(e) || 0;\n            }\n            function q(e) {\n                for(var t = [], n = 1; n < arguments.length; n++)t[n - 1] = arguments[n];\n                return t.reduce(function(t, n) {\n                    return t + G(e[\"border-\" + n + \"-width\"]);\n                }, 0);\n            }\n            var H = \"undefined\" != typeof SVGGraphicsElement ? function(e) {\n                return e instanceof A(e).SVGGraphicsElement;\n            } : function(e) {\n                return e instanceof A(e).SVGElement && \"function\" == typeof e.getBBox;\n            };\n            function K(e) {\n                return D ? H(e) ? function(e) {\n                    var t = e.getBBox();\n                    return V(0, 0, t.width, t.height);\n                }(e) : function(e) {\n                    var t = e.clientWidth, n = e.clientHeight;\n                    if (!t && !n) return U;\n                    var i = A(e).getComputedStyle(e), r = function(e) {\n                        for(var t = {}, n = 0, i = [\n                            \"top\",\n                            \"right\",\n                            \"bottom\",\n                            \"left\"\n                        ]; n < i.length; n++){\n                            var r = i[n], a = e[\"padding-\" + r];\n                            t[r] = G(a);\n                        }\n                        return t;\n                    }(i), a = r.left + r.right, o = r.top + r.bottom, s = G(i.width), l = G(i.height);\n                    if (\"border-box\" === i.boxSizing && (Math.round(s + a) !== t && (s -= q(i, \"left\", \"right\") + a), Math.round(l + o) !== n && (l -= q(i, \"top\", \"bottom\") + o)), !function(e) {\n                        return e === A(e).document.documentElement;\n                    }(e)) {\n                        var u = Math.round(s + a) - t, c = Math.round(l + o) - n;\n                        1 !== Math.abs(u) && (s -= u), 1 !== Math.abs(c) && (l -= c);\n                    }\n                    return V(r.left, r.top, s, l);\n                }(e) : U;\n            }\n            function V(e, t, n, i) {\n                return {\n                    x: e,\n                    y: t,\n                    width: n,\n                    height: i\n                };\n            }\n            var X = function() {\n                function e(e) {\n                    this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = V(0, 0, 0, 0), this.target = e;\n                }\n                return e.prototype.isActive = function() {\n                    var e = K(this.target);\n                    return this.contentRect_ = e, e.width !== this.broadcastWidth || e.height !== this.broadcastHeight;\n                }, e.prototype.broadcastRect = function() {\n                    var e = this.contentRect_;\n                    return this.broadcastWidth = e.width, this.broadcastHeight = e.height, e;\n                }, e;\n            }(), $ = function(e, t) {\n                var n, i, r, a, o, s, l, u = (i = (n = t).x, r = n.y, a = n.width, o = n.height, s = \"undefined\" != typeof DOMRectReadOnly ? DOMRectReadOnly : Object, l = Object.create(s.prototype), B(l, {\n                    x: i,\n                    y: r,\n                    width: a,\n                    height: o,\n                    top: r,\n                    right: i + a,\n                    bottom: o + r,\n                    left: i\n                }), l);\n                B(this, {\n                    target: e,\n                    contentRect: u\n                });\n            }, Y = function() {\n                function e(e, t, n) {\n                    if (this.activeObservations_ = [], this.observations_ = new L, \"function\" != typeof e) throw new TypeError(\"The callback provided as parameter 1 is not a function.\");\n                    this.callback_ = e, this.controller_ = t, this.callbackCtx_ = n;\n                }\n                return e.prototype.observe = function(e) {\n                    if (!arguments.length) throw new TypeError(\"1 argument required, but only 0 present.\");\n                    if (\"undefined\" != typeof Element && Element instanceof Object) {\n                        if (!(e instanceof A(e).Element)) throw new TypeError('parameter 1 is not of type \"Element\".');\n                        var t = this.observations_;\n                        t.has(e) || (t.set(e, new X(e)), this.controller_.addObserver(this), this.controller_.refresh());\n                    }\n                }, e.prototype.unobserve = function(e) {\n                    if (!arguments.length) throw new TypeError(\"1 argument required, but only 0 present.\");\n                    if (\"undefined\" != typeof Element && Element instanceof Object) {\n                        if (!(e instanceof A(e).Element)) throw new TypeError('parameter 1 is not of type \"Element\".');\n                        var t = this.observations_;\n                        t.has(e) && (t.delete(e), t.size || this.controller_.removeObserver(this));\n                    }\n                }, e.prototype.disconnect = function() {\n                    this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this);\n                }, e.prototype.gatherActive = function() {\n                    var e = this;\n                    this.clearActive(), this.observations_.forEach(function(t) {\n                        t.isActive() && e.activeObservations_.push(t);\n                    });\n                }, e.prototype.broadcastActive = function() {\n                    if (this.hasActive()) {\n                        var e = this.callbackCtx_, t = this.activeObservations_.map(function(e) {\n                            return new $(e.target, e.broadcastRect());\n                        });\n                        this.callback_.call(e, t, e), this.clearActive();\n                    }\n                }, e.prototype.clearActive = function() {\n                    this.activeObservations_.splice(0);\n                }, e.prototype.hasActive = function() {\n                    return this.activeObservations_.length > 0;\n                }, e;\n            }(), J = \"undefined\" != typeof WeakMap ? new WeakMap : new L, Q = function e(t) {\n                if (!(this instanceof e)) throw new TypeError(\"Cannot call a class as a function.\");\n                if (!arguments.length) throw new TypeError(\"1 argument required, but only 0 present.\");\n                var n = N.getInstance(), i = new Y(t, n, this);\n                J.set(this, i);\n            };\n            [\n                \"observe\",\n                \"unobserve\",\n                \"disconnect\"\n            ].forEach(function(e) {\n                Q.prototype[e] = function() {\n                    var t;\n                    return (t = J.get(this))[e].apply(t, arguments);\n                };\n            });\n            const Z = void 0 !== W.ResizeObserver ? W.ResizeObserver : Q, ee = \"Left\", te = \"Right\", ne = \"Up\", ie = \"Down\", re = {\n                delta: 10,\n                preventScrollOnSwipe: !1,\n                rotationAngle: 0,\n                trackMouse: !1,\n                trackTouch: !0,\n                swipeDuration: 1 / 0,\n                touchEventOptions: {\n                    passive: !0\n                }\n            }, ae = {\n                first: !0,\n                initial: [\n                    0,\n                    0\n                ],\n                start: 0,\n                swiping: !1,\n                xy: [\n                    0,\n                    0\n                ]\n            }, oe = \"mousemove\", se = \"mouseup\";\n            function le(e, t) {\n                if (0 === t) return e;\n                const n = Math.PI / 180 * t;\n                return [\n                    e[0] * Math.cos(n) + e[1] * Math.sin(n),\n                    e[1] * Math.cos(n) - e[0] * Math.sin(n)\n                ];\n            }\n            function ue(e) {\n                const { trackMouse: t } = e, i = n.useRef(Object.assign({}, ae)), r = n.useRef(Object.assign({}, re)), a = n.useRef(Object.assign({}, r.current));\n                let o;\n                for(o in a.current = Object.assign({}, r.current), r.current = Object.assign(Object.assign({}, re), e), re)void 0 === r.current[o] && (r.current[o] = re[o]);\n                const [s, l] = n.useMemo(()=>(function(e, t) {\n                        const n = (t)=>{\n                            const n = \"touches\" in t;\n                            n && t.touches.length > 1 || e((e, r)=>{\n                                r.trackMouse && !n && (document.addEventListener(oe, i), document.addEventListener(se, a));\n                                const { clientX: o, clientY: s } = n ? t.touches[0] : t, l = le([\n                                    o,\n                                    s\n                                ], r.rotationAngle);\n                                return r.onTouchStartOrOnMouseDown && r.onTouchStartOrOnMouseDown({\n                                    event: t\n                                }), Object.assign(Object.assign(Object.assign({}, e), ae), {\n                                    initial: l.slice(),\n                                    xy: l,\n                                    start: t.timeStamp || 0\n                                });\n                            });\n                        }, i = (t)=>{\n                            e((e, n)=>{\n                                const i = \"touches\" in t;\n                                if (i && t.touches.length > 1) return e;\n                                if (t.timeStamp - e.start > n.swipeDuration) return e.swiping ? Object.assign(Object.assign({}, e), {\n                                    swiping: !1\n                                }) : e;\n                                const { clientX: r, clientY: a } = i ? t.touches[0] : t, [o, s] = le([\n                                    r,\n                                    a\n                                ], n.rotationAngle), l = o - e.xy[0], u = s - e.xy[1], c = Math.abs(l), h = Math.abs(u), d = (t.timeStamp || 0) - e.start, p = Math.sqrt(c * c + h * h) / (d || 1), f = [\n                                    l / (d || 1),\n                                    u / (d || 1)\n                                ], m = function(e, t, n, i) {\n                                    return e > t ? n > 0 ? te : ee : i > 0 ? ie : ne;\n                                }(c, h, l, u), b = \"number\" == typeof n.delta ? n.delta : n.delta[m.toLowerCase()] || re.delta;\n                                if (c < b && h < b && !e.swiping) return e;\n                                const g = {\n                                    absX: c,\n                                    absY: h,\n                                    deltaX: l,\n                                    deltaY: u,\n                                    dir: m,\n                                    event: t,\n                                    first: e.first,\n                                    initial: e.initial,\n                                    velocity: p,\n                                    vxvy: f\n                                };\n                                g.first && n.onSwipeStart && n.onSwipeStart(g), n.onSwiping && n.onSwiping(g);\n                                let v = !1;\n                                return (n.onSwiping || n.onSwiped || n[`onSwiped${m}`]) && (v = !0), v && n.preventScrollOnSwipe && n.trackTouch && t.cancelable && t.preventDefault(), Object.assign(Object.assign({}, e), {\n                                    first: !1,\n                                    eventData: g,\n                                    swiping: !0\n                                });\n                            });\n                        }, r = (t)=>{\n                            e((e, n)=>{\n                                let i;\n                                if (e.swiping && e.eventData) {\n                                    if (t.timeStamp - e.start < n.swipeDuration) {\n                                        i = Object.assign(Object.assign({}, e.eventData), {\n                                            event: t\n                                        }), n.onSwiped && n.onSwiped(i);\n                                        const r = n[`onSwiped${i.dir}`];\n                                        r && r(i);\n                                    }\n                                } else n.onTap && n.onTap({\n                                    event: t\n                                });\n                                return n.onTouchEndOrOnMouseUp && n.onTouchEndOrOnMouseUp({\n                                    event: t\n                                }), Object.assign(Object.assign(Object.assign({}, e), ae), {\n                                    eventData: i\n                                });\n                            });\n                        }, a = (e)=>{\n                            document.removeEventListener(oe, i), document.removeEventListener(se, a), r(e);\n                        }, o = (e, t)=>{\n                            let a = ()=>{};\n                            if (e && e.addEventListener) {\n                                const o = Object.assign(Object.assign({}, re.touchEventOptions), t.touchEventOptions), s = [\n                                    [\n                                        \"touchstart\",\n                                        n,\n                                        o\n                                    ],\n                                    [\n                                        \"touchmove\",\n                                        i,\n                                        Object.assign(Object.assign({}, o), t.preventScrollOnSwipe ? {\n                                            passive: !1\n                                        } : {})\n                                    ],\n                                    [\n                                        \"touchend\",\n                                        r,\n                                        o\n                                    ]\n                                ];\n                                s.forEach(([t, n, i])=>e.addEventListener(t, n, i)), a = ()=>s.forEach(([t, n])=>e.removeEventListener(t, n));\n                            }\n                            return a;\n                        }, s = {\n                            ref: (t)=>{\n                                null !== t && e((e, n)=>{\n                                    if (e.el === t) return e;\n                                    const i = {};\n                                    return e.el && e.el !== t && e.cleanUpTouch && (e.cleanUpTouch(), i.cleanUpTouch = void 0), n.trackTouch && t && (i.cleanUpTouch = o(t, n)), Object.assign(Object.assign(Object.assign({}, e), {\n                                        el: t\n                                    }), i);\n                                });\n                            }\n                        };\n                        return t.trackMouse && (s.onMouseDown = n), [\n                            s,\n                            o\n                        ];\n                    })((e)=>i.current = e(i.current, r.current), {\n                        trackMouse: t\n                    }), [\n                    t\n                ]);\n                return i.current = function(e, t, n, i) {\n                    return t.trackTouch && e.el ? e.cleanUpTouch ? t.preventScrollOnSwipe !== n.preventScrollOnSwipe || t.touchEventOptions.passive !== n.touchEventOptions.passive ? (e.cleanUpTouch(), Object.assign(Object.assign({}, e), {\n                        cleanUpTouch: i(e.el, t)\n                    })) : e : Object.assign(Object.assign({}, e), {\n                        cleanUpTouch: i(e.el, t)\n                    }) : (e.cleanUpTouch && e.cleanUpTouch(), Object.assign(Object.assign({}, e), {\n                        cleanUpTouch: void 0\n                    }));\n                }(i.current, r.current, a.current, l), s;\n            }\n            var ce = i(697);\n            function he(e) {\n                return he = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, he(e);\n            }\n            function de(e, t) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var i = Object.getOwnPropertySymbols(e);\n                    t && (i = i.filter(function(t) {\n                        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n                    })), n.push.apply(n, i);\n                }\n                return n;\n            }\n            function pe(e) {\n                for(var t = 1; t < arguments.length; t++){\n                    var n = null != arguments[t] ? arguments[t] : {};\n                    t % 2 ? de(Object(n), !0).forEach(function(t) {\n                        fe(e, t, n[t]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : de(Object(n)).forEach(function(t) {\n                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n                    });\n                }\n                return e;\n            }\n            function fe(e, t, n) {\n                return (t = function(e) {\n                    var t = function(e, t) {\n                        if (\"object\" !== he(e) || null === e) return e;\n                        var n = e[Symbol.toPrimitive];\n                        if (void 0 !== n) {\n                            var i = n.call(e, t);\n                            if (\"object\" !== he(i)) return i;\n                            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                        }\n                        return String(e);\n                    }(e, \"string\");\n                    return \"symbol\" === he(t) ? t : String(t);\n                }(t)) in e ? Object.defineProperty(e, t, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = n, e;\n            }\n            var me = {\n                description: \"\",\n                fullscreen: \"\",\n                isFullscreen: !1,\n                originalAlt: \"\",\n                originalHeight: \"\",\n                originalWidth: \"\",\n                originalTitle: \"\",\n                sizes: \"\",\n                srcSet: \"\",\n                loading: \"eager\"\n            }, be = a().memo(function(e) {\n                var t = pe(pe({}, me), e), n = t.description, i = t.fullscreen, r = t.handleImageLoaded, o = t.isFullscreen, s = t.onImageError, l = t.original, u = t.originalAlt, c = t.originalHeight, h = t.originalWidth, d = t.originalTitle, p = t.sizes, f = t.srcSet, m = t.loading, b = o && i || l;\n                return a().createElement(a().Fragment, null, a().createElement(\"img\", {\n                    className: \"image-gallery-image\",\n                    src: b,\n                    alt: u,\n                    srcSet: f,\n                    height: c,\n                    width: h,\n                    sizes: p,\n                    title: d,\n                    onLoad: function(e) {\n                        return r(e, l);\n                    },\n                    onError: s,\n                    loading: m\n                }), n && a().createElement(\"span\", {\n                    className: \"image-gallery-description\"\n                }, n));\n            });\n            be.displayName = \"Item\", be.propTypes = {\n                description: ce.string,\n                fullscreen: ce.string,\n                handleImageLoaded: ce.func.isRequired,\n                isFullscreen: ce.bool,\n                onImageError: ce.func.isRequired,\n                original: ce.string.isRequired,\n                originalAlt: ce.string,\n                originalHeight: ce.string,\n                originalWidth: ce.string,\n                originalTitle: ce.string,\n                sizes: ce.string,\n                srcSet: ce.string,\n                loading: ce.string\n            };\n            const ge = be;\n            function ve(e) {\n                return ve = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, ve(e);\n            }\n            function ye(e, t) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var i = Object.getOwnPropertySymbols(e);\n                    t && (i = i.filter(function(t) {\n                        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n                    })), n.push.apply(n, i);\n                }\n                return n;\n            }\n            function we(e) {\n                for(var t = 1; t < arguments.length; t++){\n                    var n = null != arguments[t] ? arguments[t] : {};\n                    t % 2 ? ye(Object(n), !0).forEach(function(t) {\n                        Se(e, t, n[t]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ye(Object(n)).forEach(function(t) {\n                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n                    });\n                }\n                return e;\n            }\n            function Se(e, t, n) {\n                return (t = function(e) {\n                    var t = function(e, t) {\n                        if (\"object\" !== ve(e) || null === e) return e;\n                        var n = e[Symbol.toPrimitive];\n                        if (void 0 !== n) {\n                            var i = n.call(e, t);\n                            if (\"object\" !== ve(i)) return i;\n                            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                        }\n                        return String(e);\n                    }(e, \"string\");\n                    return \"symbol\" === ve(t) ? t : String(t);\n                }(t)) in e ? Object.defineProperty(e, t, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = n, e;\n            }\n            var Te = {\n                left: a().createElement(\"polyline\", {\n                    points: \"15 18 9 12 15 6\"\n                }),\n                right: a().createElement(\"polyline\", {\n                    points: \"9 18 15 12 9 6\"\n                }),\n                maximize: a().createElement(\"path\", {\n                    d: \"M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3\"\n                }),\n                minimize: a().createElement(\"path\", {\n                    d: \"M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3\"\n                }),\n                play: a().createElement(\"polygon\", {\n                    points: \"5 3 19 12 5 21 5 3\"\n                }),\n                pause: a().createElement(a().Fragment, null, a().createElement(\"rect\", {\n                    x: \"6\",\n                    y: \"4\",\n                    width: \"4\",\n                    height: \"16\"\n                }), a().createElement(\"rect\", {\n                    x: \"14\",\n                    y: \"4\",\n                    width: \"4\",\n                    height: \"16\"\n                }))\n            }, Oe = {\n                strokeWidth: 1,\n                viewBox: \"0 0 24 24\"\n            }, Ee = function(e) {\n                var t = we(we({}, Oe), e), n = t.strokeWidth, i = t.viewBox, r = t.icon;\n                return a().createElement(\"svg\", {\n                    className: \"image-gallery-svg\",\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    viewBox: i,\n                    fill: \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: n,\n                    strokeLinecap: \"round\",\n                    strokeLinejoin: \"round\"\n                }, Te[r]);\n            };\n            Ee.propTypes = {\n                strokeWidth: ce.number,\n                viewBox: ce.string,\n                icon: (0, ce.oneOf)([\n                    \"left\",\n                    \"right\",\n                    \"maximize\",\n                    \"minimize\",\n                    \"play\",\n                    \"pause\"\n                ]).isRequired\n            };\n            const ke = Ee;\n            var Ie = a().memo(function(e) {\n                var t = e.isFullscreen, n = e.onClick;\n                return a().createElement(\"button\", {\n                    type: \"button\",\n                    className: \"image-gallery-icon image-gallery-fullscreen-button\",\n                    onClick: n,\n                    \"aria-label\": \"Open Fullscreen\"\n                }, a().createElement(ke, {\n                    strokeWidth: 2,\n                    icon: t ? \"minimize\" : \"maximize\"\n                }));\n            });\n            Ie.displayName = \"Fullscreen\", Ie.propTypes = {\n                isFullscreen: ce.bool.isRequired,\n                onClick: ce.func.isRequired\n            };\n            const je = Ie;\n            var xe = a().memo(function(e) {\n                var t = e.disabled, n = e.onClick;\n                return a().createElement(\"button\", {\n                    type: \"button\",\n                    className: \"image-gallery-icon image-gallery-left-nav\",\n                    disabled: t,\n                    onClick: n,\n                    \"aria-label\": \"Previous Slide\"\n                }, a().createElement(ke, {\n                    icon: \"left\",\n                    viewBox: \"6 0 12 24\"\n                }));\n            });\n            xe.displayName = \"LeftNav\", xe.propTypes = {\n                disabled: ce.bool.isRequired,\n                onClick: ce.func.isRequired\n            };\n            const Pe = xe;\n            var _e = a().memo(function(e) {\n                var t = e.disabled, n = e.onClick;\n                return a().createElement(\"button\", {\n                    type: \"button\",\n                    className: \"image-gallery-icon image-gallery-right-nav\",\n                    disabled: t,\n                    onClick: n,\n                    \"aria-label\": \"Next Slide\"\n                }, a().createElement(ke, {\n                    icon: \"right\",\n                    viewBox: \"6 0 12 24\"\n                }));\n            });\n            _e.displayName = \"RightNav\", _e.propTypes = {\n                disabled: ce.bool.isRequired,\n                onClick: ce.func.isRequired\n            };\n            const Re = _e;\n            var Me = a().memo(function(e) {\n                var t = e.isPlaying, n = e.onClick;\n                return a().createElement(\"button\", {\n                    type: \"button\",\n                    className: \"image-gallery-icon image-gallery-play-button\",\n                    onClick: n,\n                    \"aria-label\": \"Play or Pause Slideshow\"\n                }, a().createElement(ke, {\n                    strokeWidth: 2,\n                    icon: t ? \"pause\" : \"play\"\n                }));\n            });\n            Me.displayName = \"PlayPause\", Me.propTypes = {\n                isPlaying: ce.bool.isRequired,\n                onClick: ce.func.isRequired\n            };\n            const Le = Me;\n            function De(e) {\n                return De = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, De(e);\n            }\n            function We() {\n                return We = Object.assign ? Object.assign.bind() : function(e) {\n                    for(var t = 1; t < arguments.length; t++){\n                        var n = arguments[t];\n                        for(var i in n)Object.prototype.hasOwnProperty.call(n, i) && (e[i] = n[i]);\n                    }\n                    return e;\n                }, We.apply(this, arguments);\n            }\n            function Ce(e, t) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var i = Object.getOwnPropertySymbols(e);\n                    t && (i = i.filter(function(t) {\n                        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n                    })), n.push.apply(n, i);\n                }\n                return n;\n            }\n            function Fe(e) {\n                for(var t = 1; t < arguments.length; t++){\n                    var n = null != arguments[t] ? arguments[t] : {};\n                    t % 2 ? Ce(Object(n), !0).forEach(function(t) {\n                        ze(e, t, n[t]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ce(Object(n)).forEach(function(t) {\n                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n                    });\n                }\n                return e;\n            }\n            function ze(e, t, n) {\n                return (t = function(e) {\n                    var t = function(e, t) {\n                        if (\"object\" !== De(e) || null === e) return e;\n                        var n = e[Symbol.toPrimitive];\n                        if (void 0 !== n) {\n                            var i = n.call(e, t);\n                            if (\"object\" !== De(i)) return i;\n                            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                        }\n                        return String(e);\n                    }(e, \"string\");\n                    return \"symbol\" === De(t) ? t : String(t);\n                }(t)) in e ? Object.defineProperty(e, t, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = n, e;\n            }\n            var Ne = {\n                className: \"\",\n                delta: 0,\n                onSwiping: function() {},\n                onSwiped: function() {}\n            }, Be = function(e) {\n                var t = Fe(Fe({}, Ne), e), n = t.children, i = t.className, r = ue({\n                    delta: t.delta,\n                    onSwiping: t.onSwiping,\n                    onSwiped: t.onSwiped\n                });\n                return a().createElement(\"div\", We({}, r, {\n                    className: i\n                }), n);\n            };\n            Be.propTypes = {\n                children: ce.node.isRequired,\n                className: ce.string,\n                delta: ce.number,\n                onSwiped: ce.func,\n                onSwiping: ce.func\n            };\n            const Ae = Be;\n            function Ue(e) {\n                return Ue = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) {\n                    return typeof e;\n                } : function(e) {\n                    return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e;\n                }, Ue(e);\n            }\n            function Ge(e, t) {\n                var n = Object.keys(e);\n                if (Object.getOwnPropertySymbols) {\n                    var i = Object.getOwnPropertySymbols(e);\n                    t && (i = i.filter(function(t) {\n                        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n                    })), n.push.apply(n, i);\n                }\n                return n;\n            }\n            function qe(e) {\n                for(var t = 1; t < arguments.length; t++){\n                    var n = null != arguments[t] ? arguments[t] : {};\n                    t % 2 ? Ge(Object(n), !0).forEach(function(t) {\n                        Ye(e, t, n[t]);\n                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ge(Object(n)).forEach(function(t) {\n                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n                    });\n                }\n                return e;\n            }\n            function He(e, t) {\n                for(var n = 0; n < t.length; n++){\n                    var i = t[n];\n                    i.enumerable = i.enumerable || !1, i.configurable = !0, \"value\" in i && (i.writable = !0), Object.defineProperty(e, Je(i.key), i);\n                }\n            }\n            function Ke(e, t) {\n                return Ke = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {\n                    return e.__proto__ = t, e;\n                }, Ke(e, t);\n            }\n            function Ve(e, t) {\n                if (t && (\"object\" === Ue(t) || \"function\" == typeof t)) return t;\n                if (void 0 !== t) throw new TypeError(\"Derived constructors may only return object or undefined\");\n                return Xe(e);\n            }\n            function Xe(e) {\n                if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                return e;\n            }\n            function $e(e) {\n                return $e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {\n                    return e.__proto__ || Object.getPrototypeOf(e);\n                }, $e(e);\n            }\n            function Ye(e, t, n) {\n                return (t = Je(t)) in e ? Object.defineProperty(e, t, {\n                    value: n,\n                    enumerable: !0,\n                    configurable: !0,\n                    writable: !0\n                }) : e[t] = n, e;\n            }\n            function Je(e) {\n                var t = function(e, t) {\n                    if (\"object\" !== Ue(e) || null === e) return e;\n                    var n = e[Symbol.toPrimitive];\n                    if (void 0 !== n) {\n                        var i = n.call(e, t);\n                        if (\"object\" !== Ue(i)) return i;\n                        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n                    }\n                    return String(e);\n                }(e, \"string\");\n                return \"symbol\" === Ue(t) ? t : String(t);\n            }\n            var Qe = [\n                \"fullscreenchange\",\n                \"MSFullscreenChange\",\n                \"mozfullscreenchange\",\n                \"webkitfullscreenchange\"\n            ], Ze = (0, ce.arrayOf)((0, ce.shape)({\n                srcSet: ce.string,\n                media: ce.string\n            }));\n            function et(e) {\n                var t = parseInt(e.keyCode || e.which || 0, 10);\n                return 66 === t || 62 === t;\n            }\n            var tt = function(e) {\n                !function(e, t) {\n                    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n                    e.prototype = Object.create(t && t.prototype, {\n                        constructor: {\n                            value: e,\n                            writable: !0,\n                            configurable: !0\n                        }\n                    }), Object.defineProperty(e, \"prototype\", {\n                        writable: !1\n                    }), t && Ke(e, t);\n                }(l, e);\n                var n, i, r, o, s = (r = l, o = function() {\n                    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n                    if (Reflect.construct.sham) return !1;\n                    if (\"function\" == typeof Proxy) return !0;\n                    try {\n                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {})), !0;\n                    } catch (e) {\n                        return !1;\n                    }\n                }(), function() {\n                    var e, t = $e(r);\n                    if (o) {\n                        var n = $e(this).constructor;\n                        e = Reflect.construct(t, arguments, n);\n                    } else e = t.apply(this, arguments);\n                    return Ve(this, e);\n                });\n                function l(e) {\n                    var t;\n                    return function(e, t) {\n                        if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n                    }(this, l), Ye(Xe(t = s.call(this, e)), \"onBulletClick\", function(e, n) {\n                        var i = t.props, r = i.onBulletClick, a = i.items, o = t.state.currentIndex;\n                        e.target.blur(), o !== n && (2 === a.length ? t.slideToIndexWithStyleReset(n, e) : t.slideToIndex(n, e)), r && r(e, n);\n                    }), t.state = {\n                        currentIndex: e.startIndex,\n                        thumbsTranslate: 0,\n                        thumbsSwipedTranslate: 0,\n                        currentSlideOffset: 0,\n                        galleryWidth: 0,\n                        thumbnailsWrapperWidth: 0,\n                        thumbnailsWrapperHeight: 0,\n                        thumbsStyle: {\n                            transition: \"all \".concat(e.slideDuration, \"ms ease-out\")\n                        },\n                        isFullscreen: !1,\n                        isSwipingThumbnail: !1,\n                        isPlaying: !1\n                    }, t.loadedImages = {}, t.imageGallery = a().createRef(), t.thumbnailsWrapper = a().createRef(), t.thumbnails = a().createRef(), t.imageGallerySlideWrapper = a().createRef(), t.handleImageLoaded = t.handleImageLoaded.bind(Xe(t)), t.handleKeyDown = t.handleKeyDown.bind(Xe(t)), t.handleMouseDown = t.handleMouseDown.bind(Xe(t)), t.handleResize = t.handleResize.bind(Xe(t)), t.handleTouchMove = t.handleTouchMove.bind(Xe(t)), t.handleOnSwiped = t.handleOnSwiped.bind(Xe(t)), t.handleScreenChange = t.handleScreenChange.bind(Xe(t)), t.handleSwiping = t.handleSwiping.bind(Xe(t)), t.handleThumbnailSwiping = t.handleThumbnailSwiping.bind(Xe(t)), t.handleOnThumbnailSwiped = t.handleOnThumbnailSwiped.bind(Xe(t)), t.onThumbnailMouseLeave = t.onThumbnailMouseLeave.bind(Xe(t)), t.handleImageError = t.handleImageError.bind(Xe(t)), t.pauseOrPlay = t.pauseOrPlay.bind(Xe(t)), t.renderThumbInner = t.renderThumbInner.bind(Xe(t)), t.renderItem = t.renderItem.bind(Xe(t)), t.slideLeft = t.slideLeft.bind(Xe(t)), t.slideRight = t.slideRight.bind(Xe(t)), t.toggleFullScreen = t.toggleFullScreen.bind(Xe(t)), t.togglePlay = t.togglePlay.bind(Xe(t)), t.unthrottledSlideToIndex = t.slideToIndex, t.slideToIndex = _(t.unthrottledSlideToIndex, e.slideDuration, {\n                        trailing: !1\n                    }), e.lazyLoad && (t.lazyLoaded = []), t;\n                }\n                return n = l, i = [\n                    {\n                        key: \"componentDidMount\",\n                        value: function() {\n                            var e = this.props, t = e.autoPlay, n = e.useWindowKeyDown;\n                            t && this.play(), n ? window.addEventListener(\"keydown\", this.handleKeyDown) : this.imageGallery.current.addEventListener(\"keydown\", this.handleKeyDown), window.addEventListener(\"mousedown\", this.handleMouseDown), window.addEventListener(\"touchmove\", this.handleTouchMove, {\n                                passive: !1\n                            }), this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper), this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper), this.addScreenChangeEvent();\n                        }\n                    },\n                    {\n                        key: \"componentDidUpdate\",\n                        value: function(e, t) {\n                            var n = this.props, i = n.items, r = n.lazyLoad, a = n.slideDuration, o = n.slideInterval, s = n.startIndex, l = n.thumbnailPosition, u = n.showThumbnails, c = n.useWindowKeyDown, h = this.state, d = h.currentIndex, p = h.isPlaying, f = e.items.length !== i.length, m = !M()(e.items, i), b = e.startIndex !== s, g = e.thumbnailPosition !== l, v = e.showThumbnails !== u;\n                            o === e.slideInterval && a === e.slideDuration || p && (this.pause(), this.play()), g && (this.removeResizeObserver(), this.initSlideWrapperResizeObserver(this.imageGallerySlideWrapper), this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper)), v && u && this.initThumbnailWrapperResizeObserver(this.thumbnailsWrapper), v && !u && this.removeThumbnailsResizeObserver(), (f || v) && this.handleResize(), t.currentIndex !== d && this.slideThumbnailBar(), e.slideDuration !== a && (this.slideToIndex = _(this.unthrottledSlideToIndex, a, {\n                                trailing: !1\n                            })), !r || e.lazyLoad && !m || (this.lazyLoaded = []), c !== e.useWindowKeyDown && (c ? (this.imageGallery.current.removeEventListener(\"keydown\", this.handleKeyDown), window.addEventListener(\"keydown\", this.handleKeyDown)) : (window.removeEventListener(\"keydown\", this.handleKeyDown), this.imageGallery.current.addEventListener(\"keydown\", this.handleKeyDown))), (b || m) && this.setState({\n                                currentIndex: s,\n                                slideStyle: {\n                                    transition: \"none\"\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"componentWillUnmount\",\n                        value: function() {\n                            var e = this.props.useWindowKeyDown;\n                            window.removeEventListener(\"mousedown\", this.handleMouseDown), window.removeEventListener(\"touchmove\", this.handleTouchMove), this.removeScreenChangeEvent(), this.removeResizeObserver(), this.playPauseIntervalId && (window.clearInterval(this.playPauseIntervalId), this.playPauseIntervalId = null), this.transitionTimer && window.clearTimeout(this.transitionTimer), e ? window.removeEventListener(\"keydown\", this.handleKeyDown) : this.imageGallery.current.removeEventListener(\"keydown\", this.handleKeyDown);\n                        }\n                    },\n                    {\n                        key: \"onSliding\",\n                        value: function() {\n                            var e = this, t = this.state, n = t.currentIndex, i = t.isTransitioning, r = this.props, a = r.onSlide, o = r.slideDuration;\n                            this.transitionTimer = window.setTimeout(function() {\n                                i && (e.setState({\n                                    isTransitioning: !i,\n                                    isSwipingThumbnail: !1\n                                }), a && a(n));\n                            }, o + 50);\n                        }\n                    },\n                    {\n                        key: \"onThumbnailClick\",\n                        value: function(e, t) {\n                            var n = this.props, i = n.onThumbnailClick, r = n.items, a = this.state.currentIndex;\n                            e.target.parentNode.parentNode.blur(), a !== t && (2 === r.length ? this.slideToIndexWithStyleReset(t, e) : this.slideToIndex(t, e)), i && i(e, t);\n                        }\n                    },\n                    {\n                        key: \"onThumbnailMouseOver\",\n                        value: function(e, t) {\n                            var n = this;\n                            this.thumbnailMouseOverTimer && (window.clearTimeout(this.thumbnailMouseOverTimer), this.thumbnailMouseOverTimer = null), this.thumbnailMouseOverTimer = window.setTimeout(function() {\n                                n.slideToIndex(t), n.pause();\n                            }, 300);\n                        }\n                    },\n                    {\n                        key: \"onThumbnailMouseLeave\",\n                        value: function() {\n                            if (this.thumbnailMouseOverTimer) {\n                                var e = this.props.autoPlay;\n                                window.clearTimeout(this.thumbnailMouseOverTimer), this.thumbnailMouseOverTimer = null, e && this.play();\n                            }\n                        }\n                    },\n                    {\n                        key: \"setThumbsTranslate\",\n                        value: function(e) {\n                            this.setState({\n                                thumbsTranslate: e\n                            });\n                        }\n                    },\n                    {\n                        key: \"setModalFullscreen\",\n                        value: function(e) {\n                            var t = this.props.onScreenChange;\n                            this.setState({\n                                modalFullscreen: e\n                            }), t && t(e);\n                        }\n                    },\n                    {\n                        key: \"getThumbsTranslate\",\n                        value: function(e) {\n                            var t, n = this.props, i = n.disableThumbnailScroll, r = n.items, a = this.state, o = a.thumbnailsWrapperWidth, s = a.thumbnailsWrapperHeight, l = this.thumbnails && this.thumbnails.current;\n                            if (i) return 0;\n                            if (l) {\n                                if (this.isThumbnailVertical()) {\n                                    if (l.scrollHeight <= s) return 0;\n                                    t = l.scrollHeight - s;\n                                } else {\n                                    if (l.scrollWidth <= o || o <= 0) return 0;\n                                    t = l.scrollWidth - o;\n                                }\n                                return e * (t / (r.length - 1));\n                            }\n                            return 0;\n                        }\n                    },\n                    {\n                        key: \"getThumbnailPositionClassName\",\n                        value: function(e) {\n                            switch(e){\n                                case \"left\":\n                                    e = \" \".concat(\"image-gallery-thumbnails-left\");\n                                    break;\n                                case \"right\":\n                                    e = \" \".concat(\"image-gallery-thumbnails-right\");\n                                    break;\n                                case \"bottom\":\n                                    e = \" \".concat(\"image-gallery-thumbnails-bottom\");\n                                    break;\n                                case \"top\":\n                                    e = \" \".concat(\"image-gallery-thumbnails-top\");\n                            }\n                            return e;\n                        }\n                    },\n                    {\n                        key: \"getAlignmentClassName\",\n                        value: function(e) {\n                            var t = this.state.currentIndex, n = this.props, i = n.infinite, r = n.items, a = \"\", o = \"image-gallery-left\", s = \"image-gallery-right\";\n                            switch(e){\n                                case t - 1:\n                                    a = \" \".concat(o);\n                                    break;\n                                case t:\n                                    a = \" \".concat(\"image-gallery-center\");\n                                    break;\n                                case t + 1:\n                                    a = \" \".concat(s);\n                            }\n                            return r.length >= 3 && i && (0 === e && t === r.length - 1 ? a = \" \".concat(s) : e === r.length - 1 && 0 === t && (a = \" \".concat(o))), a;\n                        }\n                    },\n                    {\n                        key: \"getTranslateXForTwoSlide\",\n                        value: function(e) {\n                            var t = this.state, n = t.currentIndex, i = t.currentSlideOffset, r = t.previousIndex, a = n !== r, o = 0 === e && 0 === r, s = 1 === e && 1 === r, l = 0 === e && 1 === n, u = 1 === e && 0 === n, c = 0 === i, h = -100 * n + 100 * e + i;\n                            return i > 0 ? this.direction = \"left\" : i < 0 && (this.direction = \"right\"), u && i > 0 && (h = -100 + i), l && i < 0 && (h = 100 + i), a ? o && c && \"left\" === this.direction ? h = 100 : s && c && \"right\" === this.direction && (h = -100) : (u && c && \"left\" === this.direction && (h = -100), l && c && \"right\" === this.direction && (h = 100)), h;\n                        }\n                    },\n                    {\n                        key: \"getThumbnailBarHeight\",\n                        value: function() {\n                            return this.isThumbnailVertical() ? {\n                                height: this.state.gallerySlideWrapperHeight\n                            } : {};\n                        }\n                    },\n                    {\n                        key: \"getSlideStyle\",\n                        value: function(e) {\n                            var t = this.state, n = t.currentIndex, i = t.currentSlideOffset, r = t.slideStyle, a = this.props, o = a.infinite, s = a.items, l = a.useTranslate3D, u = a.isRTL, c = -100 * n, h = s.length - 1, d = (c + 100 * e) * (u ? -1 : 1) + i;\n                            o && s.length > 2 && (0 === n && e === h ? d = -100 * (u ? -1 : 1) + i : n === h && 0 === e && (d = 100 * (u ? -1 : 1) + i)), o && 2 === s.length && (d = this.getTranslateXForTwoSlide(e));\n                            var p = \"translate(\".concat(d, \"%, 0)\");\n                            return l && (p = \"translate3d(\".concat(d, \"%, 0, 0)\")), qe({\n                                display: this.isSlideVisible(e) ? \"inherit\" : \"none\",\n                                WebkitTransform: p,\n                                MozTransform: p,\n                                msTransform: p,\n                                OTransform: p,\n                                transform: p\n                            }, r);\n                        }\n                    },\n                    {\n                        key: \"getCurrentIndex\",\n                        value: function() {\n                            return this.state.currentIndex;\n                        }\n                    },\n                    {\n                        key: \"getThumbnailStyle\",\n                        value: function() {\n                            var e, t = this.props, n = t.useTranslate3D, i = t.isRTL, r = this.state, a = r.thumbsTranslate, o = r.thumbsStyle, s = i ? -1 * a : a;\n                            return this.isThumbnailVertical() ? (e = \"translate(0, \".concat(a, \"px)\"), n && (e = \"translate3d(0, \".concat(a, \"px, 0)\"))) : (e = \"translate(\".concat(s, \"px, 0)\"), n && (e = \"translate3d(\".concat(s, \"px, 0, 0)\"))), qe({\n                                WebkitTransform: e,\n                                MozTransform: e,\n                                msTransform: e,\n                                OTransform: e,\n                                transform: e\n                            }, o);\n                        }\n                    },\n                    {\n                        key: \"getSlideItems\",\n                        value: function() {\n                            var e = this, n = this.state.currentIndex, i = this.props, r = i.items, o = i.slideOnThumbnailOver, s = i.onClick, l = i.lazyLoad, u = i.onTouchMove, c = i.onTouchEnd, h = i.onTouchStart, d = i.onMouseOver, p = i.onMouseLeave, f = i.renderItem, m = i.renderThumbInner, b = i.showThumbnails, g = i.showBullets, v = [], y = [], w = [];\n                            return r.forEach(function(i, r) {\n                                var S = e.getAlignmentClassName(r), T = i.originalClass ? \" \".concat(i.originalClass) : \"\", O = i.thumbnailClass ? \" \".concat(i.thumbnailClass) : \"\", E = i.renderItem || f || e.renderItem, k = i.renderThumbInner || m || e.renderThumbInner, I = !l || S || e.lazyLoaded[r];\n                                I && l && !e.lazyLoaded[r] && (e.lazyLoaded[r] = !0);\n                                var j = e.getSlideStyle(r), x = a().createElement(\"div\", {\n                                    \"aria-label\": \"Go to Slide \".concat(r + 1),\n                                    key: \"slide-\".concat(r),\n                                    tabIndex: \"-1\",\n                                    className: \"image-gallery-slide \".concat(S, \" \").concat(T),\n                                    style: j,\n                                    onClick: s,\n                                    onKeyUp: e.handleSlideKeyUp,\n                                    onTouchMove: u,\n                                    onTouchEnd: c,\n                                    onTouchStart: h,\n                                    onMouseOver: d,\n                                    onFocus: d,\n                                    onMouseLeave: p,\n                                    role: \"button\"\n                                }, I ? E(i) : a().createElement(\"div\", {\n                                    style: {\n                                        height: \"100%\"\n                                    }\n                                }));\n                                if (v.push(x), b && i.thumbnail) {\n                                    var P = t(\"image-gallery-thumbnail\", O, {\n                                        active: n === r\n                                    });\n                                    y.push(a().createElement(\"button\", {\n                                        key: \"thumbnail-\".concat(r),\n                                        type: \"button\",\n                                        tabIndex: \"0\",\n                                        \"aria-pressed\": n === r ? \"true\" : \"false\",\n                                        \"aria-label\": \"Go to Slide \".concat(r + 1),\n                                        className: P,\n                                        onMouseLeave: o ? e.onThumbnailMouseLeave : null,\n                                        onMouseOver: function(t) {\n                                            return e.handleThumbnailMouseOver(t, r);\n                                        },\n                                        onFocus: function(t) {\n                                            return e.handleThumbnailMouseOver(t, r);\n                                        },\n                                        onKeyUp: function(t) {\n                                            return e.handleThumbnailKeyUp(t, r);\n                                        },\n                                        onClick: function(t) {\n                                            return e.onThumbnailClick(t, r);\n                                        }\n                                    }, k(i)));\n                                }\n                                if (g) {\n                                    var _ = t(\"image-gallery-bullet\", i.bulletClass, {\n                                        active: n === r\n                                    });\n                                    w.push(a().createElement(\"button\", {\n                                        type: \"button\",\n                                        key: \"bullet-\".concat(r),\n                                        className: _,\n                                        onClick: function(t) {\n                                            return e.onBulletClick(t, r);\n                                        },\n                                        \"aria-pressed\": n === r ? \"true\" : \"false\",\n                                        \"aria-label\": \"Go to Slide \".concat(r + 1)\n                                    }));\n                                }\n                            }), {\n                                slides: v,\n                                thumbnails: y,\n                                bullets: w\n                            };\n                        }\n                    },\n                    {\n                        key: \"ignoreIsTransitioning\",\n                        value: function() {\n                            var e = this.props.items, t = this.state, n = t.previousIndex, i = t.currentIndex, r = e.length - 1;\n                            return Math.abs(n - i) > 1 && !(0 === n && i === r) && !(n === r && 0 === i);\n                        }\n                    },\n                    {\n                        key: \"isFirstOrLastSlide\",\n                        value: function(e) {\n                            return e === this.props.items.length - 1 || 0 === e;\n                        }\n                    },\n                    {\n                        key: \"slideIsTransitioning\",\n                        value: function(e) {\n                            var t = this.state, n = t.isTransitioning, i = t.previousIndex, r = t.currentIndex;\n                            return n && !(e === i || e === r);\n                        }\n                    },\n                    {\n                        key: \"isSlideVisible\",\n                        value: function(e) {\n                            return !this.slideIsTransitioning(e) || this.ignoreIsTransitioning() && !this.isFirstOrLastSlide(e);\n                        }\n                    },\n                    {\n                        key: \"slideThumbnailBar\",\n                        value: function() {\n                            var e = this.state, t = e.currentIndex, n = e.isSwipingThumbnail, i = -this.getThumbsTranslate(t);\n                            n || (0 === t ? this.setState({\n                                thumbsTranslate: 0,\n                                thumbsSwipedTranslate: 0\n                            }) : this.setState({\n                                thumbsTranslate: i,\n                                thumbsSwipedTranslate: i\n                            }));\n                        }\n                    },\n                    {\n                        key: \"canSlide\",\n                        value: function() {\n                            return this.props.items.length >= 2;\n                        }\n                    },\n                    {\n                        key: \"canSlideLeft\",\n                        value: function() {\n                            return this.props.infinite || this.canSlidePrevious();\n                        }\n                    },\n                    {\n                        key: \"canSlideRight\",\n                        value: function() {\n                            return this.props.infinite || this.canSlideNext();\n                        }\n                    },\n                    {\n                        key: \"canSlidePrevious\",\n                        value: function() {\n                            return this.state.currentIndex > 0;\n                        }\n                    },\n                    {\n                        key: \"canSlideNext\",\n                        value: function() {\n                            return this.state.currentIndex < this.props.items.length - 1;\n                        }\n                    },\n                    {\n                        key: \"handleSwiping\",\n                        value: function(e) {\n                            var t = e.event, n = e.absX, i = e.dir, r = this.props, a = r.disableSwipe, o = r.stopPropagation, s = this.state, l = s.galleryWidth, u = s.isTransitioning, c = s.swipingUpDown, h = s.swipingLeftRight;\n                            if (i !== ne && i !== ie && !c || h) {\n                                if (i !== ee && i !== te || h || this.setState({\n                                    swipingLeftRight: !0\n                                }), !a) {\n                                    var d = this.props.swipingTransitionDuration;\n                                    if (o && t.preventDefault(), u) this.setState({\n                                        currentSlideOffset: 0\n                                    });\n                                    else {\n                                        var p = i === te ? 1 : -1, f = n / l * 100;\n                                        Math.abs(f) >= 100 && (f = 100);\n                                        var m = {\n                                            transition: \"transform \".concat(d, \"ms ease-out\")\n                                        };\n                                        this.setState({\n                                            currentSlideOffset: p * f,\n                                            slideStyle: m\n                                        });\n                                    }\n                                }\n                            } else c || this.setState({\n                                swipingUpDown: !0\n                            });\n                        }\n                    },\n                    {\n                        key: \"handleThumbnailSwiping\",\n                        value: function(e) {\n                            var t = e.event, n = e.absX, i = e.absY, r = e.dir, a = this.props, o = a.stopPropagation, s = a.swipingThumbnailTransitionDuration, l = this.state, u = l.thumbsSwipedTranslate, c = l.thumbnailsWrapperHeight, h = l.thumbnailsWrapperWidth, d = l.swipingUpDown, p = l.swipingLeftRight;\n                            if (this.isThumbnailVertical()) {\n                                if ((r === ee || r === te || p) && !d) return void (p || this.setState({\n                                    swipingLeftRight: !0\n                                }));\n                                r !== ne && r !== ie || d || this.setState({\n                                    swipingUpDown: !0\n                                });\n                            } else {\n                                if ((r === ne || r === ie || d) && !p) return void (d || this.setState({\n                                    swipingUpDown: !0\n                                }));\n                                r !== ee && r !== te || p || this.setState({\n                                    swipingLeftRight: !0\n                                });\n                            }\n                            var f, m, b, g, v, y = this.thumbnails && this.thumbnails.current;\n                            if (this.isThumbnailVertical() ? (f = u + (r === ie ? i : -i), m = y.scrollHeight - c + 20, b = Math.abs(f) > m, g = f > 20, v = y.scrollHeight <= c) : (f = u + (r === te ? n : -n), m = y.scrollWidth - h + 20, b = Math.abs(f) > m, g = f > 20, v = y.scrollWidth <= h), !v && (r !== ee && r !== ne || !b) && (r !== te && r !== ie || !g)) {\n                                o && t.stopPropagation();\n                                var w = {\n                                    transition: \"transform \".concat(s, \"ms ease-out\")\n                                };\n                                this.setState({\n                                    thumbsTranslate: f,\n                                    thumbsStyle: w\n                                });\n                            }\n                        }\n                    },\n                    {\n                        key: \"handleOnThumbnailSwiped\",\n                        value: function() {\n                            var e = this.state.thumbsTranslate, t = this.props.slideDuration;\n                            this.resetSwipingDirection(), this.setState({\n                                isSwipingThumbnail: !0,\n                                thumbsSwipedTranslate: e,\n                                thumbsStyle: {\n                                    transition: \"all \".concat(t, \"ms ease-out\")\n                                }\n                            });\n                        }\n                    },\n                    {\n                        key: \"sufficientSwipe\",\n                        value: function() {\n                            var e = this.state.currentSlideOffset, t = this.props.swipeThreshold;\n                            return Math.abs(e) > t;\n                        }\n                    },\n                    {\n                        key: \"resetSwipingDirection\",\n                        value: function() {\n                            var e = this.state, t = e.swipingUpDown, n = e.swipingLeftRight;\n                            t && this.setState({\n                                swipingUpDown: !1\n                            }), n && this.setState({\n                                swipingLeftRight: !1\n                            });\n                        }\n                    },\n                    {\n                        key: \"handleOnSwiped\",\n                        value: function(e) {\n                            var t = e.event, n = e.dir, i = e.velocity, r = this.props, a = r.disableSwipe, o = r.stopPropagation, s = r.flickThreshold;\n                            if (!a) {\n                                var l = this.props.isRTL;\n                                o && t.stopPropagation(), this.resetSwipingDirection();\n                                var u = (n === ee ? 1 : -1) * (l ? -1 : 1), c = i > s && !(n === ne || n === ie);\n                                this.handleOnSwipedTo(u, c);\n                            }\n                        }\n                    },\n                    {\n                        key: \"handleOnSwipedTo\",\n                        value: function(e, t) {\n                            var n = this.state, i = n.currentIndex, r = n.isTransitioning, a = i;\n                            !this.sufficientSwipe() && !t || r || (a += e), (-1 === e && !this.canSlideLeft() || 1 === e && !this.canSlideRight()) && (a = i), this.unthrottledSlideToIndex(a);\n                        }\n                    },\n                    {\n                        key: \"handleTouchMove\",\n                        value: function(e) {\n                            this.state.swipingLeftRight && e.preventDefault();\n                        }\n                    },\n                    {\n                        key: \"handleMouseDown\",\n                        value: function() {\n                            this.imageGallery.current.classList.add(\"image-gallery-using-mouse\");\n                        }\n                    },\n                    {\n                        key: \"handleKeyDown\",\n                        value: function(e) {\n                            var t = this.props, n = t.disableKeyDown, i = t.useBrowserFullscreen, r = this.state.isFullscreen;\n                            if (this.imageGallery.current.classList.remove(\"image-gallery-using-mouse\"), !n) switch(parseInt(e.keyCode || e.which || 0, 10)){\n                                case 37:\n                                    this.canSlideLeft() && !this.playPauseIntervalId && this.slideLeft(e);\n                                    break;\n                                case 39:\n                                    this.canSlideRight() && !this.playPauseIntervalId && this.slideRight(e);\n                                    break;\n                                case 27:\n                                    r && !i && this.exitFullScreen();\n                            }\n                        }\n                    },\n                    {\n                        key: \"handleImageError\",\n                        value: function(e) {\n                            var t = this.props.onErrorImageURL;\n                            t && -1 === e.target.src.indexOf(t) && (e.target.src = t);\n                        }\n                    },\n                    {\n                        key: \"removeThumbnailsResizeObserver\",\n                        value: function() {\n                            this.resizeThumbnailWrapperObserver && this.thumbnailsWrapper && this.thumbnailsWrapper.current && (this.resizeThumbnailWrapperObserver.unobserve(this.thumbnailsWrapper.current), this.resizeThumbnailWrapperObserver = null);\n                        }\n                    },\n                    {\n                        key: \"removeResizeObserver\",\n                        value: function() {\n                            this.resizeSlideWrapperObserver && this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current && (this.resizeSlideWrapperObserver.unobserve(this.imageGallerySlideWrapper.current), this.resizeSlideWrapperObserver = null), this.removeThumbnailsResizeObserver();\n                        }\n                    },\n                    {\n                        key: \"handleResize\",\n                        value: function() {\n                            var e = this.state.currentIndex;\n                            this.imageGallery && (this.imageGallery && this.imageGallery.current && this.setState({\n                                galleryWidth: this.imageGallery.current.offsetWidth\n                            }), this.imageGallerySlideWrapper && this.imageGallerySlideWrapper.current && this.setState({\n                                gallerySlideWrapperHeight: this.imageGallerySlideWrapper.current.offsetHeight\n                            }), this.setThumbsTranslate(-this.getThumbsTranslate(e)));\n                        }\n                    },\n                    {\n                        key: \"initSlideWrapperResizeObserver\",\n                        value: function(e) {\n                            var t = this;\n                            e && !e.current || (this.resizeSlideWrapperObserver = new Z(P(function(e) {\n                                e && e.forEach(function(e) {\n                                    t.setState({\n                                        thumbnailsWrapperWidth: e.contentRect.width\n                                    }, t.handleResize);\n                                });\n                            }, 50)), this.resizeSlideWrapperObserver.observe(e.current));\n                        }\n                    },\n                    {\n                        key: \"initThumbnailWrapperResizeObserver\",\n                        value: function(e) {\n                            var t = this;\n                            e && !e.current || (this.resizeThumbnailWrapperObserver = new Z(P(function(e) {\n                                e && e.forEach(function(e) {\n                                    t.setState({\n                                        thumbnailsWrapperHeight: e.contentRect.height\n                                    }, t.handleResize);\n                                });\n                            }, 50)), this.resizeThumbnailWrapperObserver.observe(e.current));\n                        }\n                    },\n                    {\n                        key: \"toggleFullScreen\",\n                        value: function() {\n                            this.state.isFullscreen ? this.exitFullScreen() : this.fullScreen();\n                        }\n                    },\n                    {\n                        key: \"togglePlay\",\n                        value: function() {\n                            this.playPauseIntervalId ? this.pause() : this.play();\n                        }\n                    },\n                    {\n                        key: \"handleScreenChange\",\n                        value: function() {\n                            var e = this.props, t = e.onScreenChange, n = e.useBrowserFullscreen, i = document.fullscreenElement || document.msFullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement, r = this.imageGallery.current === i;\n                            t && t(r), n && this.setState({\n                                isFullscreen: r\n                            });\n                        }\n                    },\n                    {\n                        key: \"slideToIndex\",\n                        value: function(e, t) {\n                            var n = this.state, i = n.currentIndex, r = n.isTransitioning, a = this.props, o = a.items, s = a.slideDuration, l = a.onBeforeSlide;\n                            if (!r) {\n                                t && this.playPauseIntervalId && (this.pause(!1), this.play(!1));\n                                var u = o.length - 1, c = e;\n                                e < 0 ? c = u : e > u && (c = 0), l && c !== i && l(c), this.setState({\n                                    previousIndex: i,\n                                    currentIndex: c,\n                                    isTransitioning: c !== i,\n                                    currentSlideOffset: 0,\n                                    slideStyle: {\n                                        transition: \"all \".concat(s, \"ms ease-out\")\n                                    }\n                                }, this.onSliding);\n                            }\n                        }\n                    },\n                    {\n                        key: \"slideLeft\",\n                        value: function(e) {\n                            var t = this.props.isRTL;\n                            this.slideTo(e, t ? \"right\" : \"left\");\n                        }\n                    },\n                    {\n                        key: \"slideRight\",\n                        value: function(e) {\n                            var t = this.props.isRTL;\n                            this.slideTo(e, t ? \"left\" : \"right\");\n                        }\n                    },\n                    {\n                        key: \"slideTo\",\n                        value: function(e, t) {\n                            var n = this.state, i = n.currentIndex, r = n.isTransitioning, a = this.props.items, o = i + (\"left\" === t ? -1 : 1);\n                            r || (2 === a.length ? this.slideToIndexWithStyleReset(o, e) : this.slideToIndex(o, e));\n                        }\n                    },\n                    {\n                        key: \"slideToIndexWithStyleReset\",\n                        value: function(e, t) {\n                            var n = this, i = this.state, r = i.currentIndex, a = i.currentSlideOffset;\n                            this.setState({\n                                currentSlideOffset: a + (r > e ? .001 : -.001),\n                                slideStyle: {\n                                    transition: \"none\"\n                                }\n                            }, function() {\n                                window.setTimeout(function() {\n                                    return n.slideToIndex(e, t);\n                                }, 25);\n                            });\n                        }\n                    },\n                    {\n                        key: \"handleThumbnailMouseOver\",\n                        value: function(e, t) {\n                            this.props.slideOnThumbnailOver && this.onThumbnailMouseOver(e, t);\n                        }\n                    },\n                    {\n                        key: \"handleThumbnailKeyUp\",\n                        value: function(e, t) {\n                            et(e) && this.onThumbnailClick(e, t);\n                        }\n                    },\n                    {\n                        key: \"handleSlideKeyUp\",\n                        value: function(e) {\n                            et(e) && (0, this.props.onClick)(e);\n                        }\n                    },\n                    {\n                        key: \"isThumbnailVertical\",\n                        value: function() {\n                            var e = this.props.thumbnailPosition;\n                            return \"left\" === e || \"right\" === e;\n                        }\n                    },\n                    {\n                        key: \"addScreenChangeEvent\",\n                        value: function() {\n                            var e = this;\n                            Qe.forEach(function(t) {\n                                document.addEventListener(t, e.handleScreenChange);\n                            });\n                        }\n                    },\n                    {\n                        key: \"removeScreenChangeEvent\",\n                        value: function() {\n                            var e = this;\n                            Qe.forEach(function(t) {\n                                document.removeEventListener(t, e.handleScreenChange);\n                            });\n                        }\n                    },\n                    {\n                        key: \"fullScreen\",\n                        value: function() {\n                            var e = this.props.useBrowserFullscreen, t = this.imageGallery.current;\n                            e ? t.requestFullscreen ? t.requestFullscreen() : t.msRequestFullscreen ? t.msRequestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : this.setModalFullscreen(!0) : this.setModalFullscreen(!0), this.setState({\n                                isFullscreen: !0\n                            });\n                        }\n                    },\n                    {\n                        key: \"exitFullScreen\",\n                        value: function() {\n                            var e = this.state.isFullscreen, t = this.props.useBrowserFullscreen;\n                            e && (t ? document.exitFullscreen ? document.exitFullscreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : this.setModalFullscreen(!1) : this.setModalFullscreen(!1), this.setState({\n                                isFullscreen: !1\n                            }));\n                        }\n                    },\n                    {\n                        key: \"pauseOrPlay\",\n                        value: function() {\n                            var e = this.props.infinite, t = this.state.currentIndex;\n                            e || this.canSlideRight() ? this.slideToIndex(t + 1) : this.pause();\n                        }\n                    },\n                    {\n                        key: \"play\",\n                        value: function() {\n                            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = this.props, n = t.onPlay, i = t.slideInterval, r = t.slideDuration, a = this.state.currentIndex;\n                            this.playPauseIntervalId || (this.setState({\n                                isPlaying: !0\n                            }), this.playPauseIntervalId = window.setInterval(this.pauseOrPlay, Math.max(i, r)), n && e && n(a));\n                        }\n                    },\n                    {\n                        key: \"pause\",\n                        value: function() {\n                            var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0], t = this.props.onPause, n = this.state.currentIndex;\n                            this.playPauseIntervalId && (window.clearInterval(this.playPauseIntervalId), this.playPauseIntervalId = null, this.setState({\n                                isPlaying: !1\n                            }), t && e && t(n));\n                        }\n                    },\n                    {\n                        key: \"isImageLoaded\",\n                        value: function(e) {\n                            return !!this.loadedImages[e.original] || (this.loadedImages[e.original] = !0, !1);\n                        }\n                    },\n                    {\n                        key: \"handleImageLoaded\",\n                        value: function(e, t) {\n                            var n = this.props.onImageLoad;\n                            !this.loadedImages[t] && n && (this.loadedImages[t] = !0, n(e));\n                        }\n                    },\n                    {\n                        key: \"renderItem\",\n                        value: function(e) {\n                            var t = this.state.isFullscreen, n = this.props.onImageError || this.handleImageError;\n                            return a().createElement(ge, {\n                                description: e.description,\n                                fullscreen: e.fullscreen,\n                                handleImageLoaded: this.handleImageLoaded,\n                                isFullscreen: t,\n                                onImageError: n,\n                                original: e.original,\n                                originalAlt: e.originalAlt,\n                                originalHeight: e.originalHeight,\n                                originalWidth: e.originalWidth,\n                                originalTitle: e.originalTitle,\n                                sizes: e.sizes,\n                                loading: e.loading,\n                                srcSet: e.srcSet\n                            });\n                        }\n                    },\n                    {\n                        key: \"renderThumbInner\",\n                        value: function(e) {\n                            var t = this.props.onThumbnailError || this.handleImageError;\n                            return a().createElement(\"span\", {\n                                className: \"image-gallery-thumbnail-inner\"\n                            }, a().createElement(\"img\", {\n                                className: \"image-gallery-thumbnail-image\",\n                                src: e.thumbnail,\n                                height: e.thumbnailHeight,\n                                width: e.thumbnailWidth,\n                                alt: e.thumbnailAlt,\n                                title: e.thumbnailTitle,\n                                loading: e.thumbnailLoading,\n                                onError: t\n                            }), e.thumbnailLabel && a().createElement(\"div\", {\n                                className: \"image-gallery-thumbnail-label\"\n                            }, e.thumbnailLabel));\n                        }\n                    },\n                    {\n                        key: \"render\",\n                        value: function() {\n                            var e = this.state, n = e.currentIndex, i = e.isFullscreen, r = e.modalFullscreen, o = e.isPlaying, s = this.props, l = s.additionalClass, u = s.disableThumbnailSwipe, c = s.indexSeparator, h = s.isRTL, d = s.items, p = s.thumbnailPosition, f = s.renderFullscreenButton, m = s.renderCustomControls, b = s.renderLeftNav, g = s.renderRightNav, v = s.showBullets, y = s.showFullscreenButton, w = s.showIndex, S = s.showThumbnails, T = s.showNav, O = s.showPlayButton, E = s.renderPlayPauseButton, k = this.getThumbnailStyle(), I = this.getSlideItems(), j = I.slides, x = I.thumbnails, P = I.bullets, _ = t(\"image-gallery-slide-wrapper\", this.getThumbnailPositionClassName(p), {\n                                \"image-gallery-rtl\": h\n                            }), R = a().createElement(\"div\", {\n                                ref: this.imageGallerySlideWrapper,\n                                className: _\n                            }, m && m(), this.canSlide() ? a().createElement(a().Fragment, null, T && a().createElement(a().Fragment, null, b(this.slideLeft, !this.canSlideLeft()), g(this.slideRight, !this.canSlideRight())), a().createElement(Ae, {\n                                className: \"image-gallery-swipe\",\n                                delta: 0,\n                                onSwiping: this.handleSwiping,\n                                onSwiped: this.handleOnSwiped\n                            }, a().createElement(\"div\", {\n                                className: \"image-gallery-slides\"\n                            }, j))) : a().createElement(\"div\", {\n                                className: \"image-gallery-slides\"\n                            }, j), O && E(this.togglePlay, o), v && a().createElement(\"div\", {\n                                className: \"image-gallery-bullets\"\n                            }, a().createElement(\"div\", {\n                                className: \"image-gallery-bullets-container\",\n                                role: \"navigation\",\n                                \"aria-label\": \"Bullet Navigation\"\n                            }, P)), y && f(this.toggleFullScreen, i), w && a().createElement(\"div\", {\n                                className: \"image-gallery-index\"\n                            }, a().createElement(\"span\", {\n                                className: \"image-gallery-index-current\"\n                            }, n + 1), a().createElement(\"span\", {\n                                className: \"image-gallery-index-separator\"\n                            }, c), a().createElement(\"span\", {\n                                className: \"image-gallery-index-total\"\n                            }, d.length))), M = t(\"image-gallery\", l, {\n                                \"fullscreen-modal\": r\n                            }), L = t(\"image-gallery-content\", this.getThumbnailPositionClassName(p), {\n                                fullscreen: i\n                            }), D = t(\"image-gallery-thumbnails-wrapper\", this.getThumbnailPositionClassName(p), {\n                                \"thumbnails-wrapper-rtl\": !this.isThumbnailVertical() && h\n                            }, {\n                                \"thumbnails-swipe-horizontal\": !this.isThumbnailVertical() && !u\n                            }, {\n                                \"thumbnails-swipe-vertical\": this.isThumbnailVertical() && !u\n                            });\n                            return a().createElement(\"div\", {\n                                ref: this.imageGallery,\n                                className: M,\n                                \"aria-live\": \"polite\"\n                            }, a().createElement(\"div\", {\n                                className: L\n                            }, (\"bottom\" === p || \"right\" === p) && R, S && x.length > 0 ? a().createElement(Ae, {\n                                className: D,\n                                delta: 0,\n                                onSwiping: !u && this.handleThumbnailSwiping,\n                                onSwiped: !u && this.handleOnThumbnailSwiped\n                            }, a().createElement(\"div\", {\n                                className: \"image-gallery-thumbnails\",\n                                ref: this.thumbnailsWrapper,\n                                style: this.getThumbnailBarHeight()\n                            }, a().createElement(\"nav\", {\n                                ref: this.thumbnails,\n                                className: \"image-gallery-thumbnails-container\",\n                                style: k,\n                                \"aria-label\": \"Thumbnail Navigation\"\n                            }, x))) : null, (\"top\" === p || \"left\" === p) && R));\n                        }\n                    }\n                ], i && He(n.prototype, i), Object.defineProperty(n, \"prototype\", {\n                    writable: !1\n                }), l;\n            }(a().Component);\n            tt.propTypes = {\n                flickThreshold: ce.number,\n                items: (0, ce.arrayOf)((0, ce.shape)({\n                    bulletClass: ce.string,\n                    bulletOnClick: ce.func,\n                    description: ce.string,\n                    original: ce.string,\n                    originalHeight: ce.number,\n                    originalWidth: ce.number,\n                    loading: ce.string,\n                    thumbnailHeight: ce.number,\n                    thumbnailWidth: ce.number,\n                    thumbnailLoading: ce.string,\n                    fullscreen: ce.string,\n                    originalAlt: ce.string,\n                    originalTitle: ce.string,\n                    thumbnail: ce.string,\n                    thumbnailAlt: ce.string,\n                    thumbnailLabel: ce.string,\n                    thumbnailTitle: ce.string,\n                    originalClass: ce.string,\n                    thumbnailClass: ce.string,\n                    renderItem: ce.func,\n                    renderThumbInner: ce.func,\n                    imageSet: Ze,\n                    srcSet: ce.string,\n                    sizes: ce.string\n                })).isRequired,\n                showNav: ce.bool,\n                autoPlay: ce.bool,\n                lazyLoad: ce.bool,\n                infinite: ce.bool,\n                showIndex: ce.bool,\n                showBullets: ce.bool,\n                showThumbnails: ce.bool,\n                showPlayButton: ce.bool,\n                showFullscreenButton: ce.bool,\n                disableThumbnailScroll: ce.bool,\n                disableKeyDown: ce.bool,\n                disableSwipe: ce.bool,\n                disableThumbnailSwipe: ce.bool,\n                useBrowserFullscreen: ce.bool,\n                onErrorImageURL: ce.string,\n                indexSeparator: ce.string,\n                thumbnailPosition: (0, ce.oneOf)([\n                    \"top\",\n                    \"bottom\",\n                    \"left\",\n                    \"right\"\n                ]),\n                startIndex: ce.number,\n                slideDuration: ce.number,\n                slideInterval: ce.number,\n                slideOnThumbnailOver: ce.bool,\n                swipeThreshold: ce.number,\n                swipingTransitionDuration: ce.number,\n                swipingThumbnailTransitionDuration: ce.number,\n                onSlide: ce.func,\n                onBeforeSlide: ce.func,\n                onScreenChange: ce.func,\n                onPause: ce.func,\n                onPlay: ce.func,\n                onClick: ce.func,\n                onImageLoad: ce.func,\n                onImageError: ce.func,\n                onTouchMove: ce.func,\n                onTouchEnd: ce.func,\n                onTouchStart: ce.func,\n                onMouseOver: ce.func,\n                onMouseLeave: ce.func,\n                onBulletClick: ce.func,\n                onThumbnailError: ce.func,\n                onThumbnailClick: ce.func,\n                renderCustomControls: ce.func,\n                renderLeftNav: ce.func,\n                renderRightNav: ce.func,\n                renderPlayPauseButton: ce.func,\n                renderFullscreenButton: ce.func,\n                renderItem: ce.func,\n                renderThumbInner: ce.func,\n                stopPropagation: ce.bool,\n                additionalClass: ce.string,\n                useTranslate3D: ce.bool,\n                isRTL: ce.bool,\n                useWindowKeyDown: ce.bool\n            }, tt.defaultProps = {\n                onErrorImageURL: \"\",\n                additionalClass: \"\",\n                showNav: !0,\n                autoPlay: !1,\n                lazyLoad: !1,\n                infinite: !0,\n                showIndex: !1,\n                showBullets: !1,\n                showThumbnails: !0,\n                showPlayButton: !0,\n                showFullscreenButton: !0,\n                disableThumbnailScroll: !1,\n                disableKeyDown: !1,\n                disableSwipe: !1,\n                disableThumbnailSwipe: !1,\n                useTranslate3D: !0,\n                isRTL: !1,\n                useBrowserFullscreen: !0,\n                flickThreshold: .4,\n                stopPropagation: !1,\n                indexSeparator: \" / \",\n                thumbnailPosition: \"bottom\",\n                startIndex: 0,\n                slideDuration: 450,\n                swipingTransitionDuration: 0,\n                swipingThumbnailTransitionDuration: 0,\n                onSlide: null,\n                onBeforeSlide: null,\n                onScreenChange: null,\n                onPause: null,\n                onPlay: null,\n                onClick: null,\n                onImageLoad: null,\n                onImageError: null,\n                onTouchMove: null,\n                onTouchEnd: null,\n                onTouchStart: null,\n                onMouseOver: null,\n                onMouseLeave: null,\n                onBulletClick: null,\n                onThumbnailError: null,\n                onThumbnailClick: null,\n                renderCustomControls: null,\n                renderThumbInner: null,\n                renderItem: null,\n                slideInterval: 3e3,\n                slideOnThumbnailOver: !1,\n                swipeThreshold: 30,\n                renderLeftNav: function(e, t) {\n                    return a().createElement(Pe, {\n                        onClick: e,\n                        disabled: t\n                    });\n                },\n                renderRightNav: function(e, t) {\n                    return a().createElement(Re, {\n                        onClick: e,\n                        disabled: t\n                    });\n                },\n                renderPlayPauseButton: function(e, t) {\n                    return a().createElement(Le, {\n                        onClick: e,\n                        isPlaying: t\n                    });\n                },\n                renderFullscreenButton: function(e, t) {\n                    return a().createElement(je, {\n                        onClick: e,\n                        isFullscreen: t\n                    });\n                },\n                useWindowKeyDown: !0\n            };\n            const nt = tt;\n        })(), r;\n    })());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/react-image-gallery/build/image-gallery.js\n");

/***/ })

};
;